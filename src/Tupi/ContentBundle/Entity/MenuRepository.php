<?php

namespace Tupi\ContentBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Symfony\Component\Routing\Exception\ResourceNotFoundException;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;

use Tupi\AdminBundle\Entity\CrudRepository;

/**
 * ContactRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenuRepository extends CrudRepository
{    
    public function getMenuFromUrl($url)
    {
    	$qb = $this->createQueryBuilder('m')
        ->select('m')
        ->andWhere('m.url = :url')
        ->setParameter('url', $url);
    
     	try{
        	return $qb->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
        	throw new ResourceNotFoundException("Mapeamento $url não encontrado.");
        }  
    }
    
    public function listMenus()
    {
    	$qb = $this->createQueryBuilder('l')
    	->select('l')
    	->where('l.id = 1');

    	$result = $qb->getQuery()->getResult();
    	return $result;
    }
    
    public function getRoot()
    {
    	$qb = $this->createQueryBuilder('l')
    	->select('l')
    	->where('l.parent is null')
    	->getQuery();
    	
    	$root = null;
    	try {
    		$root = $qb->getSingleResult();
    	} catch (NoResultException $e) {
    		$message = sprintf('Não foi possível localizar o menu raiz.');
    		throw new InvalidArgumentException($message, 0, $e);
    	}
    	
    	return $root;
    }
    
    public function getNextPosition($entity){
    	
    	$qb = $this->createQueryBuilder('m')
    	->select('count(m)')
    	->join('m.parent', 'p')
    	->andWhere('p.id = :id')
    	->setParameter('id', $entity->getId())
    	->getQuery();
    	 
    	return $qb->getSingleScalarResult();
    }
}